<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- <bean id="myRealm" class="com.phkj.system.shiro.MyRealm">
	
  </bean>
	缓存
	<bean id="cacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:config/cache/ehcache-local.xml"></property>
	</bean>
	<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="cacheManager" />
	</bean>
	安全管理器
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myRealm" />
		<property name="cacheManager" ref="shiroCacheManager" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>
	
	
	注销
	<bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl" value="/login" />
	</bean>
	
	<bean id="formAuthenticationFilter" class="com.phkj.system.shiro.credentials.MyFormAuthrnticationFilter">
		<property name="usernameParam" value="j_username" />
		<property name="passwordParam" value="j_password" />
		<property name="loginUrl" value="/login" />
	</bean>
	
	<bean id="shiroFilter" class="com.phkj.system.shiro.credentials.MyshiroFilterFacotyBean">
		Shiro的核心安全接口,这个属性是必须的
		<property name="securityManager" ref="securityManager" />
		要求登录时的链接(可根据项目的URL进行替换),非必须的属性,默认会自动寻找Web工程根目录下的"/login.jsp"页面
		<property name="loginUrl" value="/login" />
		登陆成功后要跳转的连接
		<property name="successUrl" value="/index" />
		用户访问未对其授权的资源时,所显示的连接

		<property name="unauthorizedUrl" value="/login" />
		<property name="filters">
			<map>
				<entry key="authc" value-ref="formAuthenticationFilter" />
			</map>
		</property>
		Shiro连接约束配置,即过滤链的定义
		<property name="filterChainDefinitions">
			<value>
				/anon/** = anon
				/h5api*/** = anon
				/login= authc
				/logout = logout
				/randomImage = anon
				/static-*/** =anon
				/sale/*= user
				/**=user
			</value>
		</property>
	</bean>


	remember me
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="-1" />
		<property name="name" value="phkjId" />
		<property name="path" value="/" />
	</bean>
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="2592000" />30天
	</bean>
	
	
	
	rememberMe管理器
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		加密rememberMe Cookie的密钥；默认AES算法
		<property name="cipherKey"
			value="
			#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>



	凭证匹配器
	<bean id="credentialsMatcher"
		class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">

		<property name="hashAlgorithmName" value="md5" />
		<property name="hashIterations" value="1" />
		<property name="storedCredentialsHexEncoded" value="true" />
	</bean>
	
	
	 会话DAO 
	<bean id="sessionDAO"
		class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		 <property name="sessionIdGenerator" ref="sessionIdGenerator" />
         <property name="activeSessionsCacheName" value="shiro-activeSessionCache" />
         <property name="cacheManager" ref="shiroCacheManager" /> 
	</bean>
	
	会话验证调度器
	<bean id="sessionValidationScheduler"
		class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
		<property name="sessionValidationInterval" value="7200000" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>
	
	会话ID生成器
	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />

	<bean id="sessionValidateListener" class="com.phkj.sms.listener.AjaxValidateSessionListener"/>

	会话管理器
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="7200000" />
		<property name="deleteInvalidSessions" value="true" />
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<property name="sessionIdCookieEnabled" value="true"/>
		<property name="sessionIdCookie" ref="sessionIdCookie" />
		<property name="sessionDAO" ref="sessionDAO"/>
		<property name="sessionListeners" >
			<set>
				<ref bean="sessionValidateListener"/>
			</set>
		</property>
	</bean>
	
	相当于调用SecurityUtils.setSecurityManager(securityManager)
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>
	
	
	保证实现了Shiro内部lifecycle函数的bean执行
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>
    <bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.apache.shiro.authz.UnauthorizedException">/403</prop>
			</props>
		</property>
	</bean>  -->
</beans>